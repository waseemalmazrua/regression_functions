
from sklearn.linear_model import LogisticRegression, LinearRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, r2_score, mean_squared_error

def run_logistic_regression(X, y):
    """
    ØªØ¯Ø±Ø¨ Ù†Ù…ÙˆØ°Ø¬ Ù„ÙˆØ¬Ø³ØªÙŠ Ø¹Ù„Ù‰ Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª ÙˆØªØ·Ø¨Ø¹ Ù…Ù„Ø®Øµ Ø§Ù„Ù†ØªØ§Ø¦Ø¬.

    Parameters:
    X -- DataFrame: Ø§Ù„Ù…ØªØºÙŠØ±Ø§Øª Ø§Ù„Ù…Ø³ØªÙ‚Ù„Ø© (features)
    y -- Series: Ø§Ù„Ù…ØªØºÙŠØ± Ø§Ù„ØªØ§Ø¨Ø¹ (binary target 0/1)

    Returns:
    model -- Ø§Ù„Ù†Ù…ÙˆØ°Ø¬ Ø§Ù„Ù…Ø¯Ø±Ø¨ Ù…Ù† Ù†ÙˆØ¹ LogisticRegression
    """
    model = LogisticRegression(max_iter=1000)
    model.fit(X, y)
    predictions = model.predict(X)

    print("ðŸš€ Logistic Regression Results")
    print("Intercept:", model.intercept_)
    print("Coefficients:", model.coef_)
    print("Accuracy:", accuracy_score(y, predictions))
    print("Confusion Matrix:\n", confusion_matrix(y, predictions))
    print("Classification Report:\n", classification_report(y, predictions))

    return model

def run_linear_regression(X, y):
    """
    ØªØ¯Ø±Ø¨ Ù†Ù…ÙˆØ°Ø¬ Ø§Ù†Ø­Ø¯Ø§Ø± Ø®Ø·ÙŠ Ø¹Ù„Ù‰ Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª ÙˆØªØ·Ø¨Ø¹ Ù…Ù„Ø®Øµ Ø§Ù„Ù†ØªØ§Ø¦Ø¬.

    Parameters:
    X -- DataFrame: Ø§Ù„Ù…ØªØºÙŠØ±Ø§Øª Ø§Ù„Ù…Ø³ØªÙ‚Ù„Ø©
    y -- Series: Ø§Ù„Ù…ØªØºÙŠØ± Ø§Ù„ØªØ§Ø¨Ø¹

    Returns:
    model -- Ø§Ù„Ù†Ù…ÙˆØ°Ø¬ Ø§Ù„Ù…Ø¯Ø±Ø¨ Ù…Ù† Ù†ÙˆØ¹ LinearRegression
    """
    model = LinearRegression()
    model.fit(X, y)
    predictions = model.predict(X)

    print("ðŸ“ˆ Linear Regression Results")
    print("Intercept:", model.intercept_)
    print("Coefficients:", model.coef_)
    print("RÂ² Score:", r2_score(y, predictions))
    print("Mean Squared Error:", mean_squared_error(y, predictions))

    return model
